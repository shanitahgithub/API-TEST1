"""migrate

Revision ID: 077def0a454e
Revises: d93b034936a1
Create Date: 2024-03-28 16:43:56.058805

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '077def0a454e'
down_revision = 'd93b034936a1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=mysql.TINYTEXT(),
               type_=sa.Text(length=255),
               existing_nullable=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('biography',
               existing_type=mysql.TINYTEXT(),
               type_=sa.Text(length=255),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=mysql.TINYTEXT(),
               type_=sa.Text(length=255),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password',
               existing_type=sa.Text(length=255),
               type_=mysql.TINYTEXT(),
               existing_nullable=False)
        batch_op.alter_column('biography',
               existing_type=sa.Text(length=255),
               type_=mysql.TINYTEXT(),
               existing_nullable=True)

    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.alter_column('description',
               existing_type=sa.Text(length=255),
               type_=mysql.TINYTEXT(),
               existing_nullable=False)

    with op.batch_alter_table('books', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('company_id')

    # ### end Alembic commands ###
